/**
 * 
 * <h1>Impl√©mentation d'automates en Java.</h1>
 * 
 * La mod√©lisation des automates est principalement structur√©e par deux <strong>interfaces</strong> :
 * <ul>
 * <li><code>Automaton</code> : m√©thodes permettant de conna√Ætre l'automate et de l'utiliser</li>
 * <li><code>AutomatonBuilder</code> : m√©thodes permettant de d√©finir incr√©mentalement un automate</li>
 * </ul>
 *
 * <p>La mod√©lisation propos√©e correspond √† la d√©finition des automates <strong>non</strong> d√©terministes (DFA automata).
 *  <strong>sans</strong> ùúÄ-transitions.
 * </p>
 * <p>La classe abstraite <code>AbstractNDAutomaton</code>  impl√©mente la plupart des m√©thodes,
 * √† l'exception de 2 d'entre-elles : 
 * {@link Recognizer#accept(String)}, 
 * {@link Automaton#getTransitionSet(java.util.Set, char)}
 * 
 * </p>
 *   @see Automaton
 *   @see AutomatonBuilder
 *   @see AbstractNDAutomaton
* 
 * @author Bruno.Bogaert (at) univ-lille.fr
 *
 */
package automata;